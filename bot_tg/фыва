import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, CallbackContext
from telegram.ext import CallbackContext

# Enable logging
logging.basicConfig(level=logging.INFO)

# Token для бота
TOKEN = '8171076234:AAGbqGifwyKeBD3ugMN62PLVY2pgQkjfFoM'

# ID оператора поддержки
OPERATOR_CHAT_ID = 6422350149

# ID последнего пользователя
LAST_USER_CHAT_ID = 1019243445

async def start(update: Update, context: CallbackContext):
    await context.bot.send_message(chat_id=update.effective_chat.id, text='Здравствуйте! Я бот поддержки. Чтобы связаться с оператором, напишите /support.')

async def support(update: Update, context: CallbackContext):
    await context.bot.send_message(chat_id=update.effective_chat.id, text='Свяжитесь с оператором. Как я могу Вам помочь?')
    global LAST_USER_CHAT_ID
    LAST_USER_CHAT_ID = update.effective_chat.id

async def message_handler(update: Update, context: CallbackContext):
    user_message = update.message.text
    await context.bot.send_message(chat_id=OPERATOR_CHAT_ID, text=f'Пользователь {update.effective_user.username} написал: {user_message}')
    global LAST_USER_CHAT_ID
    LAST_USER_CHAT_ID = update.effective_chat.id

async def operator_reply_handler(update: Update, context: CallbackContext):
    if LAST_USER_CHAT_ID:
        operator_message = update.message.text
        await context.bot.send_message(chat_id=LAST_USER_CHAT_ID, text=f'Оператор написал: {operator_message}')

async def operator_reply_command(update: Update, context: CallbackContext):
    if update.effective_chat.id == OPERATOR_CHAT_ID:
        reply_message = update.message.text.split(' ', 1)[1]
        await context.bot.send_message(chat_id=LAST_USER_CHAT_ID, text=f'Оператор написал: {reply_message}')

def main():
    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(CommandHandler('support', support))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND & filters.Chat(OPERATOR_CHAT_ID), operator_reply_handler))
    application.add_handler(CommandHandler('reply', operator_reply_command))

    application.run_polling()

if __name__ == '__main__':
    main()